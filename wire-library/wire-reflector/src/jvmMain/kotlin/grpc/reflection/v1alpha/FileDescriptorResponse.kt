// Code generated by Wire protocol buffer compiler, do not edit.
// Source: grpc.reflection.v1alpha.FileDescriptorResponse in grpc/reflection/v1alpha/reflection.proto
package grpc.reflection.v1alpha

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.checkElementsNotNull
import com.squareup.wire.`internal`.immutableCopyOf
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Serialized FileDescriptorProto messages sent by the server answering
 * a file_by_filename, file_containing_symbol, or file_containing_extension
 * request.
 */
public class FileDescriptorResponse(
  file_descriptor_proto: List<ByteString> = emptyList(),
  unknownFields: ByteString = ByteString.EMPTY
) : Message<FileDescriptorResponse, FileDescriptorResponse.Builder>(ADAPTER, unknownFields) {
  /**
   * Serialized FileDescriptorProto messages. We avoid taking a dependency on
   * descriptor.proto, which uses proto2 only features, by making them opaque
   * bytes instead.
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.REPEATED,
    jsonName = "fileDescriptorProto"
  )
  @JvmField
  public val file_descriptor_proto: List<ByteString> = immutableCopyOf("file_descriptor_proto",
      file_descriptor_proto)

  public override fun newBuilder(): Builder {
    val builder = Builder()
    builder.file_descriptor_proto = file_descriptor_proto
    builder.addUnknownFields(unknownFields)
    return builder
  }

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is FileDescriptorResponse) return false
    if (unknownFields != other.unknownFields) return false
    if (file_descriptor_proto != other.file_descriptor_proto) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + file_descriptor_proto.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (file_descriptor_proto.isNotEmpty()) result +=
        """file_descriptor_proto=$file_descriptor_proto"""
    return result.joinToString(prefix = "FileDescriptorResponse{", separator = ", ", postfix = "}")
  }

  public fun copy(file_descriptor_proto: List<ByteString> = this.file_descriptor_proto,
      unknownFields: ByteString = this.unknownFields): FileDescriptorResponse =
      FileDescriptorResponse(file_descriptor_proto, unknownFields)

  public class Builder : Message.Builder<FileDescriptorResponse, Builder>() {
    @JvmField
    public var file_descriptor_proto: List<ByteString> = emptyList()

    /**
     * Serialized FileDescriptorProto messages. We avoid taking a dependency on
     * descriptor.proto, which uses proto2 only features, by making them opaque
     * bytes instead.
     */
    public fun file_descriptor_proto(file_descriptor_proto: List<ByteString>): Builder {
      checkElementsNotNull(file_descriptor_proto)
      this.file_descriptor_proto = file_descriptor_proto
      return this
    }

    public override fun build(): FileDescriptorResponse = FileDescriptorResponse(
      file_descriptor_proto = file_descriptor_proto,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<FileDescriptorResponse> = object :
        ProtoAdapter<FileDescriptorResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      FileDescriptorResponse::class, 
      "type.googleapis.com/grpc.reflection.v1alpha.FileDescriptorResponse", 
      PROTO_3, 
      null
    ) {
      public override fun encodedSize(value: FileDescriptorResponse): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.BYTES.asRepeated().encodedSizeWithTag(1, value.file_descriptor_proto)
        return size
      }

      public override fun encode(writer: ProtoWriter, value: FileDescriptorResponse): Unit {
        ProtoAdapter.BYTES.asRepeated().encodeWithTag(writer, 1, value.file_descriptor_proto)
        writer.writeBytes(value.unknownFields)
      }

      public override fun decode(reader: ProtoReader): FileDescriptorResponse {
        val file_descriptor_proto = mutableListOf<ByteString>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> file_descriptor_proto.add(ProtoAdapter.BYTES.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return FileDescriptorResponse(
          file_descriptor_proto = file_descriptor_proto,
          unknownFields = unknownFields
        )
      }

      public override fun redact(value: FileDescriptorResponse): FileDescriptorResponse =
          value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
