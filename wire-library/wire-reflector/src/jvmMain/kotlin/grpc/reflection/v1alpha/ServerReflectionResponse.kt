// Code generated by Wire protocol buffer compiler, do not edit.
// Source: grpc.reflection.v1alpha.ServerReflectionResponse in grpc/reflection/v1alpha/reflection.proto
package grpc.reflection.v1alpha

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.countNonNull
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Unit
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * The message sent by the server to answer ServerReflectionInfo method.
 */
public class ServerReflectionResponse(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "validHost"
  )
  @JvmField
  public val valid_host: String = "",
  @field:WireField(
    tag = 2,
    adapter = "grpc.reflection.v1alpha.ServerReflectionRequest#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "originalRequest"
  )
  @JvmField
  public val original_request: ServerReflectionRequest? = null,
  /**
   * This message is used to answer file_by_filename, file_containing_symbol,
   * file_containing_extension requests with transitive dependencies. As
   * the repeated label is not allowed in oneof fields, we use a
   * FileDescriptorResponse message to encapsulate the repeated fields.
   * The reflection service is allowed to avoid sending FileDescriptorProtos
   * that were previously sent in response to earlier requests in the stream.
   */
  @field:WireField(
    tag = 4,
    adapter = "grpc.reflection.v1alpha.FileDescriptorResponse#ADAPTER",
    jsonName = "fileDescriptorResponse"
  )
  @JvmField
  public val file_descriptor_response: FileDescriptorResponse? = null,
  /**
   * This message is used to answer all_extension_numbers_of_type requst.
   */
  @field:WireField(
    tag = 5,
    adapter = "grpc.reflection.v1alpha.ExtensionNumberResponse#ADAPTER",
    jsonName = "allExtensionNumbersResponse"
  )
  @JvmField
  public val all_extension_numbers_response: ExtensionNumberResponse? = null,
  /**
   * This message is used to answer list_services request.
   */
  @field:WireField(
    tag = 6,
    adapter = "grpc.reflection.v1alpha.ListServiceResponse#ADAPTER",
    jsonName = "listServicesResponse"
  )
  @JvmField
  public val list_services_response: ListServiceResponse? = null,
  /**
   * This message is used when an error occurs.
   */
  @field:WireField(
    tag = 7,
    adapter = "grpc.reflection.v1alpha.ErrorResponse#ADAPTER",
    jsonName = "errorResponse"
  )
  @JvmField
  public val error_response: ErrorResponse? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<ServerReflectionResponse, ServerReflectionResponse.Builder>(ADAPTER, unknownFields) {
  init {
    require(countNonNull(file_descriptor_response, all_extension_numbers_response,
        list_services_response, error_response) <= 1) {
      "At most one of file_descriptor_response, all_extension_numbers_response, list_services_response, error_response may be non-null"
    }
  }

  public override fun newBuilder(): Builder {
    val builder = Builder()
    builder.valid_host = valid_host
    builder.original_request = original_request
    builder.file_descriptor_response = file_descriptor_response
    builder.all_extension_numbers_response = all_extension_numbers_response
    builder.list_services_response = list_services_response
    builder.error_response = error_response
    builder.addUnknownFields(unknownFields)
    return builder
  }

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ServerReflectionResponse) return false
    if (unknownFields != other.unknownFields) return false
    if (valid_host != other.valid_host) return false
    if (original_request != other.original_request) return false
    if (file_descriptor_response != other.file_descriptor_response) return false
    if (all_extension_numbers_response != other.all_extension_numbers_response) return false
    if (list_services_response != other.list_services_response) return false
    if (error_response != other.error_response) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + valid_host.hashCode()
      result = result * 37 + original_request.hashCode()
      result = result * 37 + file_descriptor_response.hashCode()
      result = result * 37 + all_extension_numbers_response.hashCode()
      result = result * 37 + list_services_response.hashCode()
      result = result * 37 + error_response.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """valid_host=${sanitize(valid_host)}"""
    if (original_request != null) result += """original_request=$original_request"""
    if (file_descriptor_response != null) result +=
        """file_descriptor_response=$file_descriptor_response"""
    if (all_extension_numbers_response != null) result +=
        """all_extension_numbers_response=$all_extension_numbers_response"""
    if (list_services_response != null) result +=
        """list_services_response=$list_services_response"""
    if (error_response != null) result += """error_response=$error_response"""
    return result.joinToString(prefix = "ServerReflectionResponse{", separator = ", ", postfix =
        "}")
  }

  public fun copy(
    valid_host: String = this.valid_host,
    original_request: ServerReflectionRequest? = this.original_request,
    file_descriptor_response: FileDescriptorResponse? = this.file_descriptor_response,
    all_extension_numbers_response: ExtensionNumberResponse? = this.all_extension_numbers_response,
    list_services_response: ListServiceResponse? = this.list_services_response,
    error_response: ErrorResponse? = this.error_response,
    unknownFields: ByteString = this.unknownFields
  ): ServerReflectionResponse = ServerReflectionResponse(valid_host, original_request,
      file_descriptor_response, all_extension_numbers_response, list_services_response,
      error_response, unknownFields)

  public class Builder : Message.Builder<ServerReflectionResponse, Builder>() {
    @JvmField
    public var valid_host: String = ""

    @JvmField
    public var original_request: ServerReflectionRequest? = null

    @JvmField
    public var file_descriptor_response: FileDescriptorResponse? = null

    @JvmField
    public var all_extension_numbers_response: ExtensionNumberResponse? = null

    @JvmField
    public var list_services_response: ListServiceResponse? = null

    @JvmField
    public var error_response: ErrorResponse? = null

    public fun valid_host(valid_host: String): Builder {
      this.valid_host = valid_host
      return this
    }

    public fun original_request(original_request: ServerReflectionRequest?): Builder {
      this.original_request = original_request
      return this
    }

    /**
     * This message is used to answer file_by_filename, file_containing_symbol,
     * file_containing_extension requests with transitive dependencies. As
     * the repeated label is not allowed in oneof fields, we use a
     * FileDescriptorResponse message to encapsulate the repeated fields.
     * The reflection service is allowed to avoid sending FileDescriptorProtos
     * that were previously sent in response to earlier requests in the stream.
     */
    public fun file_descriptor_response(file_descriptor_response: FileDescriptorResponse?):
        Builder {
      this.file_descriptor_response = file_descriptor_response
      this.all_extension_numbers_response = null
      this.list_services_response = null
      this.error_response = null
      return this
    }

    /**
     * This message is used to answer all_extension_numbers_of_type requst.
     */
    public
        fun all_extension_numbers_response(all_extension_numbers_response: ExtensionNumberResponse?):
        Builder {
      this.all_extension_numbers_response = all_extension_numbers_response
      this.file_descriptor_response = null
      this.list_services_response = null
      this.error_response = null
      return this
    }

    /**
     * This message is used to answer list_services request.
     */
    public fun list_services_response(list_services_response: ListServiceResponse?): Builder {
      this.list_services_response = list_services_response
      this.file_descriptor_response = null
      this.all_extension_numbers_response = null
      this.error_response = null
      return this
    }

    /**
     * This message is used when an error occurs.
     */
    public fun error_response(error_response: ErrorResponse?): Builder {
      this.error_response = error_response
      this.file_descriptor_response = null
      this.all_extension_numbers_response = null
      this.list_services_response = null
      return this
    }

    public override fun build(): ServerReflectionResponse = ServerReflectionResponse(
      valid_host = valid_host,
      original_request = original_request,
      file_descriptor_response = file_descriptor_response,
      all_extension_numbers_response = all_extension_numbers_response,
      list_services_response = list_services_response,
      error_response = error_response,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<ServerReflectionResponse> = object :
        ProtoAdapter<ServerReflectionResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      ServerReflectionResponse::class, 
      "type.googleapis.com/grpc.reflection.v1alpha.ServerReflectionResponse", 
      PROTO_3, 
      null
    ) {
      public override fun encodedSize(value: ServerReflectionResponse): Int {
        var size = value.unknownFields.size
        if (value.valid_host != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1,
            value.valid_host)
        if (value.original_request != null) size +=
            ServerReflectionRequest.ADAPTER.encodedSizeWithTag(2, value.original_request)
        size += FileDescriptorResponse.ADAPTER.encodedSizeWithTag(4, value.file_descriptor_response)
        size += ExtensionNumberResponse.ADAPTER.encodedSizeWithTag(5,
            value.all_extension_numbers_response)
        size += ListServiceResponse.ADAPTER.encodedSizeWithTag(6, value.list_services_response)
        size += ErrorResponse.ADAPTER.encodedSizeWithTag(7, value.error_response)
        return size
      }

      public override fun encode(writer: ProtoWriter, value: ServerReflectionResponse): Unit {
        if (value.valid_host != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.valid_host)
        if (value.original_request != null) ServerReflectionRequest.ADAPTER.encodeWithTag(writer, 2,
            value.original_request)
        FileDescriptorResponse.ADAPTER.encodeWithTag(writer, 4, value.file_descriptor_response)
        ExtensionNumberResponse.ADAPTER.encodeWithTag(writer, 5,
            value.all_extension_numbers_response)
        ListServiceResponse.ADAPTER.encodeWithTag(writer, 6, value.list_services_response)
        ErrorResponse.ADAPTER.encodeWithTag(writer, 7, value.error_response)
        writer.writeBytes(value.unknownFields)
      }

      public override fun decode(reader: ProtoReader): ServerReflectionResponse {
        var valid_host: String = ""
        var original_request: ServerReflectionRequest? = null
        var file_descriptor_response: FileDescriptorResponse? = null
        var all_extension_numbers_response: ExtensionNumberResponse? = null
        var list_services_response: ListServiceResponse? = null
        var error_response: ErrorResponse? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> valid_host = ProtoAdapter.STRING.decode(reader)
            2 -> original_request = ServerReflectionRequest.ADAPTER.decode(reader)
            4 -> file_descriptor_response = FileDescriptorResponse.ADAPTER.decode(reader)
            5 -> all_extension_numbers_response = ExtensionNumberResponse.ADAPTER.decode(reader)
            6 -> list_services_response = ListServiceResponse.ADAPTER.decode(reader)
            7 -> error_response = ErrorResponse.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ServerReflectionResponse(
          valid_host = valid_host,
          original_request = original_request,
          file_descriptor_response = file_descriptor_response,
          all_extension_numbers_response = all_extension_numbers_response,
          list_services_response = list_services_response,
          error_response = error_response,
          unknownFields = unknownFields
        )
      }

      public override fun redact(value: ServerReflectionResponse): ServerReflectionResponse =
          value.copy(
        original_request = value.original_request?.let(ServerReflectionRequest.ADAPTER::redact),
        file_descriptor_response =
            value.file_descriptor_response?.let(FileDescriptorResponse.ADAPTER::redact),
        all_extension_numbers_response =
            value.all_extension_numbers_response?.let(ExtensionNumberResponse.ADAPTER::redact),
        list_services_response =
            value.list_services_response?.let(ListServiceResponse.ADAPTER::redact),
        error_response = value.error_response?.let(ErrorResponse.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
